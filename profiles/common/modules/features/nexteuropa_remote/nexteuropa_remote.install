<?php
/**
 * @file
 * Install file.
 */

/**
 * Implements hook_schema().
 */
function nexteuropa_remote_schema() {
  $schema['nexteuropa_remote_entity'] = [
    'description' => 'Stores remote entities.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Unique ID.',
      ],
      'revision_id' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Revision ID.',
        'default' => 0,
        'unsigned' => TRUE,
      ],
      'label' => [
        'description' => 'Language-independent label.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'type' =>[
        'description' => 'The {while_type}.type of this while.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ],
      'language' => [
        'description' => 'Language code.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ],
      'uid' => [
        'description' => 'User ID owning the remote entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'created' => [
        'description' => 'The Unix timestamp when the entity was created.',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'changed' => [
        'description' => 'The Unix timestamp when the entity was changed.',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'status' => [
        'description' => 'Whether the entity is active (1) or not (0).',
        'type' => 'int',
        'default' => 0,
        'size' => 'tiny',
        'not null' => FALSE,
      ],
    ],
    'indexes' => [
      'changed' => ['changed'],
      'created' => ['created'],
      'uid' => ['uid'],
    ],
    'foreign keys' => [
      'owner' => [
        'table' => 'users',
        'columns' => ['uid' => 'uid'],
      ],
      'nexteuropa_remote_revision' => [
        'table' => 'nexteuropa_remote_revision',
        'columns' => ['revision_id' => 'revision_id'],
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['nexteuropa_remote_entity_revision'] = [
    'description' => 'Stores remote entity revisions.',
    'fields' => [
      'revision_id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique revision ID.',
      ],
      'id' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Remote entity ID.',
      ],
      'label' => [
        'description' => 'Language-independent label.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'language' => [
        'description' => 'Language code.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ],
      'uid' => [
        'description' => 'User ID owning the remote entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'created' => [
        'description' => 'The Unix timestamp when the entity was created.',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'changed' => [
        'description' => 'The Unix timestamp when the entity was changed.',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'status' => [
        'description' => 'Whether the entity is active (1) or not (0).',
        'type' => 'int',
        'default' => 0,
        'size' => 'tiny',
        'not null' => FALSE,
      ],
    ],
    'indexes' => [
      'changed' => ['changed'],
      'created' => ['created'],
      'uid' => ['uid'],
    ],
    'foreign keys' => [
      'owner' => [
        'table' => 'users',
        'columns' => ['uid' => 'uid'],
      ],
      'nexteuropa_remote_entity' => [
        'table' => 'nexteuropa_remote_entity',
        'columns' => ['id' => 'id'],
      ],
    ],
    'primary key' => ['revision_id'],
  ];
  return $schema;
}
