<?php
/**
 * @file
 * Module file.
 */

use Drupal\nexteuropa_remote\Entity\RemoteEntity;

include_once 'includes/nexteuropa_remote.entity.inc';

/**
 * Implements hook_views_api().
 */
function nexteuropa_remote_views_api() {
  return ["api" => "3.0"];
}

/**
 * Implements hook_permission().
 */
function nexteuropa_remote_entity_permission() {
  return [
    'administer nexteuropa remote entities' => [
      'title' => t('Administer nexteuropa remote entities'),
    ],
    'access nexteuropa remote entities' => [
      'title' => t('Access nexteuropa remote entities'),
    ],
  ];
}

/**
 * Load remote entity.
 *
 * @param int $id
 *    Remote entity id.
 *
 * @return RemoteEntity|FALSE
 *    Remote entity object, or FALSE if not found.
 */
function nexteuropa_remote_load($id) {
  return entity_load_single('nexteuropa_remote', $id);
}

/**
 * View the remote entity.
 *
 * @param RemoteEntity $entity
 *    Remote entity object.
 * @param string $view_mode
 *    View mode machine name.
 * @param string $language
 *    Language code.
 *
 * @return array
 *    Renderable array.
 */
function nexteuropa_remote_view(RemoteEntity $entity, $view_mode = 'default', $language = NULL) {
  if (!isset($language)) {
    $language = $GLOBALS['language_content']->language;
  }
  return $entity->view($view_mode, $language);
}

/**
 * Remote entity access callback.
 *
 * @param string $op
 *    Current operation.
 * @param RemoteEntity|NULL $entity
 *    Remote entity object.
 * @param object $account
 *    User account for which to check permissions.
 *
 * @return bool
 *    TRUE if given user can perform current operation, FALSE otherwise.
 */
function nexteuropa_remote_access($op, \Drupal\nexteuropa_remote\Entity\RemoteEntity $entity = NULL, $account = NULL) {
  return ($op == 'view') ? user_access('access nexteuropa remote entities') : user_access('administer nexteuropa remote entities');
}
